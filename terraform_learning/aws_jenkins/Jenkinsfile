#!/usr/bin/env groovy

pipeline {
    agent any

		environment {
		        IMAGE_NAME = 'tmax23/js-app:latest'
		}

    stages {

        stage('build app') {
            steps {
                script {
                    echo "building the application is not required"
                }
            }
        }

				stage('build image') {
            steps {
                script {
                    echo "building the docker image"
										dir ('terraform_learning/aws_jenkins') {
                        withCredentials([usernamePassword(credentialsId: 'docker-hub-repo', passwordVariable: 'PASS', usernameVariable: 'USER')]) {
                            sh "docker build -t ${IMAGE_NAME} ."
                            sh "echo $PASS | docker login -u $USER --password-stdin"
                            sh "docker push ${IMAGE_NAME}"
                        }
                    }
								}
            }
        }

				stage('deploy to ec2') {
				            steps {
				                script {

												dir ('terraform_learning/aws_jenkins') {
													 echo 'deploying docker image to EC2'

				                   def shellCmd = "bash ./server-cmds.sh ${IMAGE_NAME}"
				                   def ec2Instance = "ec2-user@13.58.185.107"

				                   sshagent(['my-ssh-key']) {
				                       sh "scp server-cmds.sh ${ec2Instance}:/home/ec2-user"
				                       sh "scp docker-compose.yaml ${ec2Instance}:/home/ec2-user"
				                       sh "ssh -o StrictHostKeyChecking=no ${ec2Instance} ${shellCmd}"
				                   }
                          }
												}
				            }
				        }

		}
}
